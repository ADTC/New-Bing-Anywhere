import useConfig from '@/hooks/useConfig'
import { type Scene } from '@@/types'
import { useState } from 'react'
import { useParams, useSearchParams } from 'react-router-dom'
import s from '../chat.module.styl'
import Markdown from './Markdown'
import { Button, Spin, Tooltip } from 'antd'
import { BugOutlined, LinkOutlined, ReloadOutlined, SettingOutlined } from '@ant-design/icons'

import Settings from './Settings'

export default () => {
  const [config] = useConfig()
  const { scene = 'newtab' } = useParams<{ scene: Scene }>()

  const isPopup = scene === 'popup'

  const [openSettings, setOpenSettings] = useState(false)
  const popupCss = {
    minWidth: 400,
    minHeight: 400,
    borderRadius: 0
  }
  return (
    <>
      <Settings
        open={openSettings}
        onCancel={() => {
          setOpenSettings(false)
          setTimeout(() => {
            location.reload()
          }, 100)
        }}
      />

      <br />
      <div className={[s.wrap, s[config.conversationStyle?.toLowerCase()]].filter(Boolean).join(' ')} style={isPopup ? popupCss : {}}>
        <header>
          <img src="../images/bing_48x48.png" />
          <h1>New Bing Anywhere</h1>
          <div className={s.btns}>
            <Tooltip>
              <Button
                icon={<ReloadOutlined />}
                type="ghost"
                onClick={(e) => {
                  e.preventDefault()
                  setRefreshDataKey(Date.now())
                  setLoading(true)
                  setSession(undefined)
                  setContent({ text: '', sourceAttributions: [], suggestedResponses: [] })
                }}
                href=""
              />
            </Tooltip>

            <Button
              icon={<SettingOutlined />}
              type="ghost"
              href=""
              onClick={(e) => {
                e.preventDefault()
                setOpenSettings(true)
              }}
            />
            <Tooltip title="Report a bug or suggestion">
              <Button icon={<BugOutlined />} type="ghost" onClick={reportIssues} href="" />
            </Tooltip>
            <Tooltip title="Open with Bing.com">
              <Button
                icon={<LinkOutlined />}
                type="ghost"
                href={`https://www.bing.com/search?q=${encodeURIComponent(prompt)}&showconv=1`}
                onClick={async (e) => {
                  e.preventDefault()
                  const url = e.currentTarget.href
                  try {
                    await callBackground('openUrlInSameTab', [{ url }])
                  } catch (e) {
                    window.open(url, '_blank')
                  }
                }}
              />
            </Tooltip>
          </div>
        </header>
      </div>
    </>
  )
}
